--- a/drivers/net/wireless/ath/ath9k/hw.c
+++ b/drivers/net/wireless/ath/ath9k/hw.c
@@ -487,24 +487,21 @@ static void ath9k_hw_init_macaddr(struct
 	static const u32 EEP_MAC[] = { EEP_MAC_LSW, EEP_MAC_MID, EEP_MAC_MSW };
 
 	/* MAC address may already be loaded via ath9k_platform_data */
-	if (is_valid_ether_addr(common->macaddr))
-		return;
-
-	for (i = 0; i < 3; i++) {
-		eeval = ah->eep_ops->get_eeprom(ah, EEP_MAC[i]);
-		common->macaddr[2 * i] = eeval >> 8;
-		common->macaddr[2 * i + 1] = eeval & 0xff;
+	if (!is_valid_ether_addr(common->macaddr)) {
+		for (i = 0; i < 3; i++) {
+			eeval = ah->eep_ops->get_eeprom(ah, EEP_MAC[i]);
+			common->macaddr[2 * i] = eeval >> 8;
+			common->macaddr[2 * i + 1] = eeval & 0xff;
+		}
 	}
 
-	if (is_valid_ether_addr(common->macaddr))
-		return;
-
-	ath_err(common, "eeprom contains invalid mac address: %pM\n",
-		common->macaddr);
+	ath_info(common, "eeprom contains mac address: %pM\n",
+		 common->macaddr);
 
 	random_ether_addr(common->macaddr);
-	ath_err(common, "random mac address will be used: %pM\n",
-		common->macaddr);
+	common->macaddr[0] &= ~0x02;	/* clear local assignment bit */
+	ath_info(common, "random mac address will be used: %pM\n",
+		 common->macaddr);
 
 	return;
 }
